{"ast":null,"code":"class Api {\n  constructor(config) {\n    this.url = config.url;\n    this.headers = config.headers;\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    return res.json();\n  }\n\n  getAllCards() {\n    return fetch(this.url + \"cards\", {\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  addCard(data) {\n    return fetch(this.url + \"cards\", {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify(data)\n    }).then(res => this._getResponseData(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(this.url + \"cards/\" + cardId, {\n      method: \"DELETE\",\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  getUser() {\n    return fetch(this.url + \"users/me\", {\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  editUser(name, about) {\n    return fetch(this.url + \"users/me\", {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  changeAvatar(link) {\n    return fetch(this.url + \"users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(res => this._getResponseData(res));\n  }\n\n  addLike(cardId) {\n    return fetch(this.url + \"cards/likes/\" + cardId, {\n      method: \"PUT\",\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n  removeLike(cardId) {\n    return fetch(this.url + \"cards/likes/\" + cardId, {\n      method: \"DELETE\",\n      headers: this.headers\n    }).then(res => this._getResponseData(res));\n  }\n\n}\n\nconst fetchConfig = {\n  url: \"https://mesto.nomoreparties.co/v1/cohort-26/\",\n  headers: {\n    'Content-Type': 'application/json',\n    authorization: '9ac46a9a-c60a-4887-8c79-f1f3a6e1b013'\n  }\n};\nconst api = new Api(fetchConfig);\nexport default api;","map":{"version":3,"sources":["/Users/olegzharkikh/Desktop/dev/mesto-react/src/utils/Api.js"],"names":["Api","constructor","config","url","headers","_getResponseData","res","ok","Promise","reject","status","json","getAllCards","fetch","then","addCard","data","method","body","JSON","stringify","deleteCard","cardId","getUser","editUser","name","about","changeAvatar","link","avatar","addLike","removeLike","fetchConfig","authorization","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor(config) {\n    this.url = config.url;\n    this.headers = config.headers;\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n        return Promise.reject(`Ошибка: ${res.status}`); \n    }\n    return res.json();\n  } \n\n  getAllCards() {\n    return fetch(this.url + \"cards\", {\n      headers: this.headers\n    })\n    .then((res) => this._getResponseData(res));\n  }\n\n  addCard(data) {\n    return fetch(this.url + \"cards\", {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify(data)\n    })\n    .then((res) => this._getResponseData(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(this.url + \"cards/\" + cardId, {\n      method: \"DELETE\",\n      headers: this.headers\n    })\n    .then((res) => this._getResponseData(res));\n  }\n\n  getUser() {\n    return fetch(this.url + \"users/me\", {\n      headers: this.headers\n    })\n    .then((res) => this._getResponseData(res));\n  }\n\n  editUser(name, about) {\n    return fetch(this.url + \"users/me\", {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    })\n    .then((res) => this._getResponseData(res));\n  }\n\n  changeAvatar(link) {\n    return fetch(this.url + \"users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    })\n    .then((res) => this._getResponseData(res));\n  }\n\n  addLike(cardId) {\n    return fetch(this.url + \"cards/likes/\" + cardId, {\n      method: \"PUT\", \n      headers: this.headers\n    })\n    .then((res) => this._getResponseData(res));\n  }\n\n  removeLike(cardId) {\n    return fetch(this.url + \"cards/likes/\" + cardId, {\n      method: \"DELETE\", \n      headers: this.headers\n    })\n    .then((res) => this._getResponseData(res));\n  }\n}\n\n\nconst fetchConfig = {\n  url: \"https://mesto.nomoreparties.co/v1/cohort-26/\",\n  headers: {\n    'Content-Type': 'application/json',\n    authorization: '9ac46a9a-c60a-4887-8c79-f1f3a6e1b013'\n  }\n};\n\nconst api = new Api(fetchConfig);\n\nexport default api;"]},"metadata":{},"sourceType":"module"}